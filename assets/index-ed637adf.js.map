{"version":3,"file":"index-ed637adf.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/NiftyHeatmap.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState, useEffect } from 'react';\n\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [yearlyReturns, setYearlyReturns] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [yearFilter, setYearFilter] = useState('all');\n  const [stats, setStats] = useState(null);\n  const [debugInfo, setDebugInfo] = useState('Starting data load...');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setDebugInfo(prev => prev + '\\nAttempting to fetch data...');\n        const response = await fetch(`data/nifty_returns.json`);\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const jsonData = await response.json();\n        setData(jsonData);\n        setDebugInfo(prev => prev + '\\nData parsed successfully');\n        \n        // Calculate yearly returns\n        const yearlyData = {};\n        Object.entries(jsonData).forEach(([year, months]) => {\n          let yearValue = 100;\n          Object.values(months).forEach(monthReturn => {\n            if (monthReturn !== undefined && monthReturn !== null) {\n              yearValue *= (1 + monthReturn/100);\n            }\n          });\n          yearlyData[year] = (yearValue - 100).toFixed(2);\n        });\n        setYearlyReturns(yearlyData);\n        \n        // Calculate statistics\n        const allReturns = [];\n        Object.entries(jsonData).forEach(([year, months]) => {\n          Object.entries(months).forEach(([month, value]) => {\n            if (value !== undefined && value !== null) {\n              allReturns.push({ year, month, value });\n            }\n          });\n        });\n        \n        const sortedReturns = allReturns.sort((a, b) => b.value - a.value);\n        setStats({\n          best: sortedReturns[0],\n          worst: sortedReturns[sortedReturns.length - 1],\n          average: (allReturns.reduce((sum, item) => sum + item.value, 0) / allReturns.length).toFixed(2)\n        });\n      } catch (error) {\n        console.error('Error:', error);\n        setError(error.message);\n        setDebugInfo(prev => prev + '\\nError: ' + error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const getColor = (value) => {\n    if (value === undefined) return 'bg-gray-100';\n    if (value > 5) return 'bg-green-600 text-white';\n    if (value > 2) return 'bg-green-500 text-white';\n    if (value > 0) return 'bg-green-300';\n    if (value > -2) return 'bg-red-300';\n    if (value > -5) return 'bg-red-500 text-white';\n    return 'bg-red-600 text-white';\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen p-4\">\n        <div className=\"space-y-2\">\n          <div className=\"text-lg\">Loading NIFTY returns data...</div>\n          <pre className=\"text-sm text-gray-600 bg-gray-50 p-2 rounded\">{debugInfo}</pre>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4\">\n        <div className=\"text-red-600 mb-4\">Error loading data: {error}</div>\n        <pre className=\"text-sm bg-gray-50 p-4 rounded\">{debugInfo}</pre>\n        <div className=\"mt-4 text-sm text-gray-600\">\n          Please check:\n          <ul className=\"list-disc ml-6 mt-2\">\n            <li>The file exists at data/nifty_returns.json</li>\n            <li>The JSON content is valid</li>\n            <li>The server is responding correctly</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  const years = Object.keys(data).sort((a, b) => b - a);\n  const filteredYears = yearFilter === 'all' ? years : years.filter(year => {\n    if (yearFilter === 'recent') return parseInt(year) >= 2020;\n    if (yearFilter === 'crisis') return ['2008', '2020'].includes(year);\n    return true;\n  });\n\n  const isSignificantEvent = (year, month, value) => {\n    const isLargeDrop = value !== undefined && value <= -15;\n    const isMarketEvent = \n      (year === '2008' && month === 'Oct') || // Financial Crisis\n      (year === '2020' && month === 'Mar');   // COVID Crash\n    return isLargeDrop || isMarketEvent;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"bg-white shadow\">\n        <div className=\"p-4 md:p-6 max-w-full mx-auto\">\n          <div className=\"mb-4 md:mb-6\">\n            <h1 className=\"text-xl md:text-2xl font-bold text-gray-900\">NIFTY 50 Monthly Returns Heatmap</h1>\n            <p className=\"text-sm md:text-base text-gray-600 mt-1\">Monthly percentage returns of NIFTY 50 index over time</p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col md:flex-row md:items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-gray-700 text-sm md:text-base\">Time Period:</span>\n                <select \n                  className=\"border rounded px-2 py-1 text-sm md:text-base\"\n                  value={yearFilter}\n                  onChange={(e) => setYearFilter(e.target.value)}\n                >\n                  <option value=\"all\">All Years</option>\n                  <option value=\"recent\">Recent (2020+)</option>\n                  <option value=\"crisis\">Crisis Years</option>\n                </select>\n              </div>\n\n              {stats && (\n                <div className=\"grid grid-cols-1 md:flex md:flex-wrap gap-2 md:gap-4 text-sm\">\n                  <div>\n                    Best Month: \n                    <span className=\"text-green-600 font-medium ml-1\">\n                      {stats.best.month} {stats.best.year} ({stats.best.value.toFixed(2)}%)\n                    </span>\n                  </div>\n                  <div>\n                    Worst Month: \n                    <span className=\"text-red-600 font-medium ml-1\">\n                      {stats.worst.month} {stats.worst.year} ({stats.worst.value.toFixed(2)}%)\n                    </span>\n                  </div>\n                  <div>\n                    Average Return: \n                    <span className=\"font-medium ml-1\">{stats.average}%</span>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-3 md:flex md:flex-wrap gap-2 md:gap-4 text-xs md:text-sm\">\n              <span className=\"col-span-3 text-gray-700\">Returns:</span>\n              {[\n                { range: '>5%', color: 'bg-green-600' },\n                { range: '2-5%', color: 'bg-green-500' },\n                { range: '0-2%', color: 'bg-green-300' },\n                { range: '0 to -2%', color: 'bg-red-300' },\n                { range: '-2 to -5%', color: 'bg-red-500' },\n                { range: '<-5%', color: 'bg-red-600' }\n              ].map(({ range, color }) => (\n                <div key={range} className=\"flex items-center gap-1\">\n                  <div className={`w-3 h-3 md:w-4 md:h-4 ${color}`}></div>\n                  <span>{range}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-2 md:p-6\">\n        <div className=\"overflow-x-auto -mx-2 md:mx-0\">\n          <table className=\"w-full border-collapse bg-white text-xs md:text-sm\">\n            <thead>\n              <tr>\n                <th className=\"border p-1 md:p-2 bg-gray-50 text-left font-medium text-gray-700 sticky left-0 z-10\">Year</th>\n                {MONTHS.map(month => (\n                  <th key={month} className=\"border p-1 md:p-2 bg-gray-50 font-medium text-gray-700 text-center whitespace-nowrap\">\n                    {month}\n                  </th>\n                ))}\n                <th className=\"border p-1 md:p-2 bg-gray-100 font-medium text-gray-700 text-center whitespace-nowrap\">\n                  Year Total\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredYears.map(year => (\n                <tr key={year}>\n                  <td className=\"border p-1 md:p-2 font-medium text-gray-700 sticky left-0 bg-white z-10\">{year}</td>\n                  {MONTHS.map(month => {\n                    const value = data[year]?.[month];\n                    const isSignificant = isSignificantEvent(year, month, value);\n                    return (\n                      <td \n                        key={`${year}-${month}`}\n                        className={`border p-1 md:p-2 text-center relative ${getColor(value)} \n                          ${isSignificant ? 'ring-2 ring-yellow-400' : ''}`}\n                        onMouseEnter={() => setHoveredCell({ year, month, value })}\n                        onMouseLeave={() => setHoveredCell(null)}\n                      >\n                        {value !== undefined ? value.toFixed(2) : ''}\n                        {isSignificant && (\n                          <div className=\"absolute -top-1 -right-1 w-1.5 h-1.5 md:w-2 md:h-2 bg-yellow-400 rounded-full\"></div>\n                        )}\n                      </td>\n                    );\n                  })}\n                  <td className={`border p-1 md:p-2 text-center font-medium ${getColor(parseFloat(yearlyReturns[year]))}`}>\n                    {yearlyReturns[year]}%\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {hoveredCell && hoveredCell.value !== undefined && (\n        <div \n          className=\"fixed bg-white p-2 md:p-3 rounded shadow-lg border text-xs md:text-sm\"\n          style={{\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            zIndex: 50\n          }}\n        >\n          <div className=\"font-medium\">{hoveredCell.month} {hoveredCell.year}</div>\n          <div className={hoveredCell.value >= 0 ? 'text-green-600' : 'text-red-600'}>\n            Return: {hoveredCell.value.toFixed(2)}%\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;","import React from 'react'\nimport NiftyHeatmap from './components/NiftyHeatmap'\n\nfunction App() {\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-4\">\n      <NiftyHeatmap />\n    </div>\n  )\n}\n\nexport default App","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","createRoot","hydrateRoot","MONTHS","App","data","setData","useState","yearlyReturns","setYearlyReturns","error","setError","isLoading","setIsLoading","hoveredCell","setHoveredCell","yearFilter","setYearFilter","stats","setStats","debugInfo","setDebugInfo","useEffect","async","prev","response","fetch","ok","Error","status","jsonData","json","yearlyData","entries","forEach","year","months","yearValue","values","monthReturn","toFixed","allReturns","month","value","push","sortedReturns","sort","best","worst","length","average","reduce","sum","item","message","getColor","className","children","years","keys","filteredYears","filter","parseInt","includes","jsxRuntimeExports","onChange","target","range","color","map","_a","isSignificant","isSignificantEvent","onMouseEnter","onMouseLeave","parseFloat","style","top","left","transform","zIndex","NiftyHeatmap","document","getElementById","render","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}